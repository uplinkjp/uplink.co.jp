"use strict";var NE={};NE={init:function(){$(function(){NE.sample.init(),NE.bind()})},bind:function(){console.log("bind"),$(window).on("load",function(){NE.onload()}).on("scroll",function(){NE.onscroll()})},onload:function(){console.log("onload"),$(".js-slick").slick({infinite:!0,dots:!0,slidesToShow:1,centerMode:!0,centerPadding:"6%",prevArrow:"",nextArrow:""}),NE.header.init($(".l-header"))},onscroll:function(){var e=$(window).scrollTop();NE.header.scroll(e)}},NE.init(),NE.header={$el:null,$el_height:null,$el_nav_trigger:null,_st:0,init:function(e){console.log("header.js init"),NE.header.$el=e,NE.header.$el_height=e.height(),NE.header.$el.wrap('<div class="js-header-wrap"></div>'),$(".js-header-wrap").height(e.height()),NE.header.$el_nav_trigger=$(".header-nav_trigger"),NE.header.bind()},bind:function(){NE.header.$el_nav_trigger.find("a").on("click",function(){return NE.header._st>=60&&(NE.header.$el.hasClass("is-open")?(NE.scrollBan.release(),NE.header.$el.removeClass("is-open"),NE.header.$el_nav_trigger.addClass("is-close")):(NE.scrollBan.ban(NE.header._st),NE.header.$el.addClass("is-scroll").addClass("is-fixed").addClass("is-open"),NE.header.$el_nav_trigger.removeClass("is-close"))),!1})},scroll:function(e){NE.header.$el.hasClass("is-open")||(e>NE.header.$el_height?(NE.header.$el.addClass("is-scroll"),e<NE.header._st?(NE.header.$el.addClass("is-fixed"),NE.header.$el_nav_trigger.addClass("is-close")):NE.header.$el.removeClass("is-fixed")):(NE.header.$el.removeClass("is-scroll"),NE.header.$el.removeClass("is-open"),NE.header.$el.removeClass("is-fixed"),NE.header.$el_nav_trigger.removeClass("is-close")),NE.header._st=e)},open:function(){},close:function(){}},NE.sample={init:function(){console.log("sample init")},bind:function(){}},NE.scrollBan={_currentPos:0,init:function(){},ban:function(e){NE.scrollBan._currentPos=e,$("body").addClass("is-fixed"),$("body").css({top:"-"+e+"px"})},release:function(){$("body").removeClass("is-fixed"),$("html,body").scrollTop(NE.scrollBan._currentPos)}},NE.slick={init:function(){console.log("sample init")},bind:function(){}},NE.sticky={init:function(){console.log("sample init")},bind:function(){}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiLCJtb2R1bGVzL2hlYWRlci5qcyIsIm1vZHVsZXMvc2FtcGxlLmpzIiwibW9kdWxlcy9zY3JvbGxCYW4uanMiLCJtb2R1bGVzL3NsaWNrLmpzIiwibW9kdWxlcy9zdGlja3kuanMiXSwibmFtZXMiOlsiTkUiLCJpbml0IiwiJCIsInNhbXBsZSIsImJpbmQiLCJjb25zb2xlIiwibG9nIiwid2luZG93Iiwib24iLCJvbmxvYWQiLCJvbnNjcm9sbCIsInNsaWNrIiwiaW5maW5pdGUiLCJkb3RzIiwic2xpZGVzVG9TaG93IiwiY2VudGVyTW9kZSIsImNlbnRlclBhZGRpbmciLCJwcmV2QXJyb3ciLCJuZXh0QXJyb3ciLCJoZWFkZXIiLCJzdCIsInNjcm9sbFRvcCIsInNjcm9sbCIsIiRlbCIsIiRlbF9oZWlnaHQiLCIkZWxfbmF2X3RyaWdnZXIiLCJfc3QiLCJlbCIsImhlaWdodCIsIndyYXAiLCJmaW5kIiwiaGFzQ2xhc3MiLCJzY3JvbGxCYW4iLCJyZWxlYXNlIiwicmVtb3ZlQ2xhc3MiLCJhZGRDbGFzcyIsImJhbiIsIm9wZW4iLCJjbG9zZSIsIl9jdXJyZW50UG9zIiwiY3NzIiwidG9wIiwic3RpY2t5Il0sIm1hcHBpbmdzIjoiQUFBQSxZQUVBLElBQUFBLE1BRUFBLEtBQ0FDLEtBQUEsV0FDQUMsRUFBQSxXQUNBRixHQUFBRyxPQUFBRixPQUNBRCxHQUFBSSxVQUlBQSxLQUFBLFdBQ0FDLFFBQUFDLElBQUEsUUFDQUosRUFBQUssUUFDQUMsR0FBQSxPQUFBLFdBQ0FSLEdBQUFTLFdBRUFELEdBQUEsU0FBQSxXQUNBUixHQUFBVSxjQUtBRCxPQUFBLFdBQ0FKLFFBQUFDLElBQUEsVUFDQUosRUFBQSxhQUFBUyxPQUNBQyxVQUFBLEVBQ0FDLE1BQUEsRUFDQUMsYUFBQSxFQUNBQyxZQUFBLEVBQ0FDLGNBQUEsS0FDQUMsVUFBQSxHQUNBQyxVQUFBLEtBR0FsQixHQUFBbUIsT0FBQWxCLEtBQUFDLEVBQUEsZUFHQVEsU0FBQSxXQUNBLEdBQUFVLEdBQUFsQixFQUFBSyxRQUFBYyxXQUVBckIsSUFBQW1CLE9BQUFHLE9BQUFGLEtBS0FwQixHQUFBQyxPQy9DQUQsR0FBQW1CLFFBRUFJLElBQUEsS0FDQUMsV0FBQSxLQUNBQyxnQkFBQSxLQUNBQyxJQUFBLEVBRUF6QixLQUFBLFNBQUEwQixHQUNBdEIsUUFBQUMsSUFBQSxrQkFDQU4sR0FBQW1CLE9BQUFJLElBQUFJLEVBQ0EzQixHQUFBbUIsT0FBQUssV0FBQUcsRUFBQUMsU0FDQTVCLEdBQUFtQixPQUFBSSxJQUFBTSxLQUFBLHNDQUNBM0IsRUFBQSxtQkFBQTBCLE9BQUFELEVBQUFDLFVBQ0E1QixHQUFBbUIsT0FBQU0sZ0JBQUF2QixFQUFBLHVCQUNBRixHQUFBbUIsT0FBQWYsUUFHQUEsS0FBQSxXQUNBSixHQUFBbUIsT0FBQU0sZ0JBQUFLLEtBQUEsS0FBQXRCLEdBQUEsUUFBQSxXQWVBLE1BZEFSLElBQUFtQixPQUFBTyxLQUFBLEtBQ0ExQixHQUFBbUIsT0FBQUksSUFBQVEsU0FBQSxZQUNBL0IsR0FBQWdDLFVBQUFDLFVBQ0FqQyxHQUFBbUIsT0FBQUksSUFBQVcsWUFBQSxXQUNBbEMsR0FBQW1CLE9BQUFNLGdCQUFBVSxTQUFBLGNBRUFuQyxHQUFBZ0MsVUFBQUksSUFBQXBDLEdBQUFtQixPQUFBTyxLQUNBMUIsR0FBQW1CLE9BQUFJLElBQ0FZLFNBQUEsYUFDQUEsU0FBQSxZQUNBQSxTQUFBLFdBQ0FuQyxHQUFBbUIsT0FBQU0sZ0JBQUFTLFlBQUEsZUFHQSxLQUlBWixPQUFBLFNBQUFGLEdBQ0FwQixHQUFBbUIsT0FBQUksSUFBQVEsU0FBQSxhQUNBWCxFQUFBcEIsR0FBQW1CLE9BQUFLLFlBQ0F4QixHQUFBbUIsT0FBQUksSUFBQVksU0FBQSxhQUNBZixFQUFBcEIsR0FBQW1CLE9BQUFPLEtBQ0ExQixHQUFBbUIsT0FBQUksSUFBQVksU0FBQSxZQUNBbkMsR0FBQW1CLE9BQUFNLGdCQUFBVSxTQUFBLGFBRUFuQyxHQUFBbUIsT0FBQUksSUFBQVcsWUFBQSxjQUdBbEMsR0FBQW1CLE9BQUFJLElBQUFXLFlBQUEsYUFDQWxDLEdBQUFtQixPQUFBSSxJQUFBVyxZQUFBLFdBQ0FsQyxHQUFBbUIsT0FBQUksSUFBQVcsWUFBQSxZQUNBbEMsR0FBQW1CLE9BQUFNLGdCQUFBUyxZQUFBLGFBRUFsQyxHQUFBbUIsT0FBQU8sSUFBQU4sSUFJQWlCLEtBQUEsYUFHQUMsTUFBQSxjQzVEQXRDLEdBQUFHLFFBRUFGLEtBQUEsV0FDQUksUUFBQUMsSUFBQSxnQkFHQUYsS0FBQSxjQ05BSixHQUFBZ0MsV0FFQU8sWUFBQSxFQUVBdEMsS0FBQSxhQUdBbUMsSUFBQSxTQUFBaEIsR0FDQXBCLEdBQUFnQyxVQUFBTyxZQUFBbkIsRUFDQWxCLEVBQUEsUUFBQWlDLFNBQUEsWUFDQWpDLEVBQUEsUUFBQXNDLEtBQ0FDLElBQUEsSUFBQXJCLEVBQUEsUUFJQWEsUUFBQSxXQUNBL0IsRUFBQSxRQUFBZ0MsWUFBQSxZQUNBaEMsRUFBQSxhQUFBbUIsVUFBQXJCLEdBQUFnQyxVQUFBTyxlQ2pCQXZDLEdBQUFXLE9BRUFWLEtBQUEsV0FDQUksUUFBQUMsSUFBQSxnQkFHQUYsS0FBQSxjQ05BSixHQUFBMEMsUUFFQXpDLEtBQUEsV0FDQUksUUFBQUMsSUFBQSxnQkFHQUYsS0FBQSIsImZpbGUiOiJzY3JpcHQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgTkUgPSB7fTtcblxuTkUgPSB7XG4gIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgICQoIGZ1bmN0aW9uKCkge1xuICAgICAgTkUuc2FtcGxlLmluaXQoKTtcbiAgICAgIE5FLmJpbmQoKTtcbiAgICB9KTtcbiAgfSxcblxuICBiaW5kOiBmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZygnYmluZCcpO1xuICAgICQod2luZG93KVxuICAgIC5vbignbG9hZCcsIGZ1bmN0aW9uKCkge1xuICAgICAgTkUub25sb2FkKCk7XG4gICAgfSlcbiAgICAub24oJ3Njcm9sbCcsIGZ1bmN0aW9uKCkge1xuICAgICAgTkUub25zY3JvbGwoKTtcbiAgICB9KVxuXG4gIH0sXG5cbiAgb25sb2FkOiBmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZygnb25sb2FkJyk7XG4gICAgJCgnLmpzLXNsaWNrJykuc2xpY2soe1xuICAgICAgaW5maW5pdGU6IHRydWUsXG4gICAgICBkb3RzOnRydWUsXG4gICAgICBzbGlkZXNUb1Nob3c6IDEsXG4gICAgICBjZW50ZXJNb2RlOiB0cnVlLCAvL+imgee0oOOCkuS4reWkruWvhOOBm1xuICAgICAgY2VudGVyUGFkZGluZzonNiUnLCAvL+S4oeOCteOCpOODieOBruimi+OBiOOBpuOBhOOCi+mDqOWIhuOBruOCteOCpOOCulxuICAgICAgcHJldkFycm93OiAnJyxcbiAgICAgIG5leHRBcnJvdzogJycsXG4gICAgfSk7XG5cbiAgICBORS5oZWFkZXIuaW5pdCgkKCcubC1oZWFkZXInKSk7XG4gIH0sXG5cbiAgb25zY3JvbGw6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdCA9ICQod2luZG93KS5zY3JvbGxUb3AoKTtcblxuICAgIE5FLmhlYWRlci5zY3JvbGwoc3QpO1xuICB9XG5cbn07XG5cbk5FLmluaXQoKTtcbiIsIk5FLmhlYWRlciA9IHtcblxuICAkZWw6IG51bGwsXG4gICRlbF9oZWlnaHQ6IG51bGwsXG4gICRlbF9uYXZfdHJpZ2dlcjogbnVsbCxcbiAgX3N0OiAwLFxuXG4gIGluaXQ6IGZ1bmN0aW9uKGVsKSB7XG4gICAgY29uc29sZS5sb2coJ2hlYWRlci5qcyBpbml0Jyk7XG4gICAgTkUuaGVhZGVyLiRlbCA9IGVsO1xuICAgIE5FLmhlYWRlci4kZWxfaGVpZ2h0ID0gZWwuaGVpZ2h0KCk7XG4gICAgTkUuaGVhZGVyLiRlbC53cmFwKCc8ZGl2IGNsYXNzPVwianMtaGVhZGVyLXdyYXBcIj48L2Rpdj4nKTtcbiAgICAkKCcuanMtaGVhZGVyLXdyYXAnKS5oZWlnaHQoZWwuaGVpZ2h0KCkpO1xuICAgIE5FLmhlYWRlci4kZWxfbmF2X3RyaWdnZXIgPSAkKCcuaGVhZGVyLW5hdl90cmlnZ2VyJyk7XG4gICAgTkUuaGVhZGVyLmJpbmQoKTtcbiAgfSxcblxuICBiaW5kOiBmdW5jdGlvbigpIHtcbiAgICBORS5oZWFkZXIuJGVsX25hdl90cmlnZ2VyLmZpbmQoJ2EnKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICAgIGlmKE5FLmhlYWRlci5fc3QgPj0gNjApIHtcbiAgICAgICAgaWYoTkUuaGVhZGVyLiRlbC5oYXNDbGFzcygnaXMtb3BlbicpKSB7XG4gICAgICAgICAgTkUuc2Nyb2xsQmFuLnJlbGVhc2UoKTtcbiAgICAgICAgICBORS5oZWFkZXIuJGVsLnJlbW92ZUNsYXNzKCdpcy1vcGVuJyk7XG4gICAgICAgICAgTkUuaGVhZGVyLiRlbF9uYXZfdHJpZ2dlci5hZGRDbGFzcygnaXMtY2xvc2UnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBORS5zY3JvbGxCYW4uYmFuKE5FLmhlYWRlci5fc3QpO1xuICAgICAgICAgIE5FLmhlYWRlci4kZWxcbiAgICAgICAgICAuYWRkQ2xhc3MoJ2lzLXNjcm9sbCcpXG4gICAgICAgICAgLmFkZENsYXNzKCdpcy1maXhlZCcpXG4gICAgICAgICAgLmFkZENsYXNzKCdpcy1vcGVuJyk7XG4gICAgICAgICAgTkUuaGVhZGVyLiRlbF9uYXZfdHJpZ2dlci5yZW1vdmVDbGFzcygnaXMtY2xvc2UnKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0pO1xuICB9LFxuXG4gIHNjcm9sbDogZnVuY3Rpb24oc3QpIHtcbiAgICBpZighTkUuaGVhZGVyLiRlbC5oYXNDbGFzcygnaXMtb3BlbicpKSB7XG4gICAgICBpZihzdCA+IE5FLmhlYWRlci4kZWxfaGVpZ2h0KSB7XG4gICAgICAgIE5FLmhlYWRlci4kZWwuYWRkQ2xhc3MoJ2lzLXNjcm9sbCcpO1xuICAgICAgICBpZihzdCA8IE5FLmhlYWRlci5fc3QgKSB7XG4gICAgICAgICAgTkUuaGVhZGVyLiRlbC5hZGRDbGFzcygnaXMtZml4ZWQnKTtcbiAgICAgICAgICBORS5oZWFkZXIuJGVsX25hdl90cmlnZ2VyLmFkZENsYXNzKCdpcy1jbG9zZScpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIE5FLmhlYWRlci4kZWwucmVtb3ZlQ2xhc3MoJ2lzLWZpeGVkJyk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIE5FLmhlYWRlci4kZWwucmVtb3ZlQ2xhc3MoJ2lzLXNjcm9sbCcpO1xuICAgICAgICBORS5oZWFkZXIuJGVsLnJlbW92ZUNsYXNzKCdpcy1vcGVuJyk7XG4gICAgICAgIE5FLmhlYWRlci4kZWwucmVtb3ZlQ2xhc3MoJ2lzLWZpeGVkJyk7XG4gICAgICAgIE5FLmhlYWRlci4kZWxfbmF2X3RyaWdnZXIucmVtb3ZlQ2xhc3MoJ2lzLWNsb3NlJyk7XG4gICAgICB9XG4gICAgICBORS5oZWFkZXIuX3N0ID0gc3Q7XG4gICAgfVxuICB9LFxuXG4gIG9wZW46IGZ1bmN0aW9uKCkge1xuICB9LFxuXG4gIGNsb3NlOiBmdW5jdGlvbigpIHtcbiAgfSxcblxuXG59O1xuIiwiTkUuc2FtcGxlID0ge1xuXG4gIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgIGNvbnNvbGUubG9nKCdzYW1wbGUgaW5pdCcpO1xuICB9LFxuXG4gIGJpbmQ6IGZ1bmN0aW9uKCkge1xuICB9LFxuXG59O1xuIiwiTkUuc2Nyb2xsQmFuID0ge1xuXG4gIF9jdXJyZW50UG9zOiAwLFxuXG4gIGluaXQ6IGZ1bmN0aW9uKCkge1xuICB9LFxuXG4gIGJhbjogZnVuY3Rpb24oc3QpIHtcbiAgICBORS5zY3JvbGxCYW4uX2N1cnJlbnRQb3MgPSBzdDtcbiAgICAkKCdib2R5JykuYWRkQ2xhc3MoJ2lzLWZpeGVkJyk7XG4gICAgJCgnYm9keScpLmNzcyh7XG4gICAgICB0b3A6ICctJyArIHN0ICsgJ3B4J1xuICAgIH0pO1xuICB9LFxuXG4gIHJlbGVhc2U6IGZ1bmN0aW9uKCl7XG4gICAgJCgnYm9keScpLnJlbW92ZUNsYXNzKCdpcy1maXhlZCcpO1xuICAgICQoJ2h0bWwsYm9keScpLnNjcm9sbFRvcChORS5zY3JvbGxCYW4uX2N1cnJlbnRQb3MpO1xuICB9XG5cbn07XG4iLCJORS5zbGljayA9IHtcblxuICBpbml0OiBmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZygnc2FtcGxlIGluaXQnKTtcbiAgfSxcblxuICBiaW5kOiBmdW5jdGlvbigpIHtcbiAgfSxcblxufTtcbiIsIk5FLnN0aWNreSA9IHtcblxuICBpbml0OiBmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZygnc2FtcGxlIGluaXQnKTtcbiAgfSxcblxuICBiaW5kOiBmdW5jdGlvbigpIHtcbiAgfSxcblxufTtcbiJdfQ==
